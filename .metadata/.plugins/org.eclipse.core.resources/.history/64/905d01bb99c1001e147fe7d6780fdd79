package com.dataentry.uploadcsv.controller;

import java.net.http.HttpHeaders;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import com.dataentry.uploadcsv.Responsemessage.Responsemessage;
import com.dataentry.uploadcsv.csv.CSV;
import com.dataentry.uploadcsv.model.Study;
import com.dataentry.uploadcsv.model.StudyDto;
import com.dataentry.uploadcsv.repository.StudyRepository;
import com.dataentry.uploadcsv.uploadcsvservice.CsvService;

import jakarta.persistence.EntityManager;
import jakarta.persistence.Parameter;
import jakarta.persistence.PersistenceContext;
import jakarta.persistence.Query;

import org.springframework.web.multipart.MultipartFile;

@RestController
@RequestMapping(path = "/event")
public class CsvController {

	@PersistenceContext
	private EntityManager entityManager;
	@Autowired
	private CsvService cService;

	
	@PostMapping(path = "/upload")
	public ResponseEntity<Responsemessage> uploadfile(MultipartFile file) {
		String message = "";
		if (CSV.hasCSV(file)) {
			cService.save(file);
			try {
				message = "uploaded";
				return ResponseEntity.status(HttpStatus.OK).body(new Responsemessage(message));
			} catch (Exception e) {
				message = "failed";
				return ResponseEntity.status(HttpStatus.EXPECTATION_FAILED).body(new Responsemessage(message));
			}
		}
		message = "error";
		return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(new Responsemessage(message));
	}

	@GetMapping(path = "/getdata")
	public List<Object[]> getdata(MultipartFile file) {

		String queryString = "SELECT s.fname,s.lname FROM Study s";
		Query query = entityManager.createQuery(queryString);
		 List<Object[]> result=query.getResultList();
		 List<Object[]> studydtoList=new ArrayList<Object[]>();
		for(Object[] study:result) {
			Object[] obj=new Object[2];
			obj[0]=study[0];
			obj[1]=study[1];
			studydtoList.add(obj);

	}
		return studydtoList;

}
}
