package com.dataentry.uploadcsv.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import org.springframework.web.bind.annotation.RestController;

import com.dataentry.uploadcsv.Responsemessage.Responsemessage;
import com.dataentry.uploadcsv.csv.CSV;
import com.dataentry.uploadcsv.uploadcsvservice.CsvService;

import jakarta.persistence.EntityManager;
import jakarta.persistence.Parameter;
import jakarta.persistence.PersistenceContext;
import jakarta.persistence.Query;

import org.springframework.web.multipart.MultipartFile;

@RestController
@RequestMapping(path = "/event")
public class CsvController {

	@PersistenceContext
	private EntityManager entityManager;
	@Autowired
	private CsvService cService;

	@PostMapping(path = "/upload")
	public ResponseEntity<Responsemessage> uploadfile(MultipartFile file) {
		String message = "";
		if (CSV.hasCSV(file)) {
			cService.save(file);
			try {
				message = "uploaded";
				return ResponseEntity.status(HttpStatus.OK).body(new Responsemessage(message));
			} catch (Exception e) {
				message = "failed";
				return ResponseEntity.status(HttpStatus.EXPECTATION_FAILED).body(new Responsemessage(message));
			}
		}
		message = "error";
		return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(new Responsemessage(message));
	}

	@GetMapping("/getdata")
	public HashMap<String, HashMap<String, String>> getdata(MultipartFile file) {
		String queryString = "SELECT s.fname,s.lname FROM Study s";
		Query query = entityManager.createQuery(queryString);
		List<Object[]> result = query.getResultList();
		
		List<Object[]> studydtoList = new ArrayList<Object[]>();
		HashMap<String, HashMap<String, String>> opp = new HashMap<>();
		Integer i = 0;
		for (Object[] study : result) {
			// Study stud=new Study();
			HashMap<String, String> op = new HashMap<>();
			op.put("lname", study[0].toString());
			op.put("fname", study[1].toString());
			opp.put(i.toString(), op);
			i++;
			// Object[] obj=new Object[2];
			// obj[0]=study[0];
			// obj[1]=study[1];
			// studydtoList.add(obj);
		}
		return opp;
	}
}
